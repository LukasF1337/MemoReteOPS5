; MemoRete OPS5 example program(strategy LEX)(literalize robot        name        type        velocity        location        instantiated)(literalize pose        name        x        y)(literalize init val)(literalize cleanup)(startup    (make robot ^name SIM_DX1 ^type Pioneer-AT ^velocity 0 ^location pat1))(p makeInitial    -(init)    (robot)-->    (make init ^val 1))(p moveRobot1to2    {<elemvariable_init> (init ^val 1 ^val <value>)}    {<robo> (robot ^name <na> ^location <locationName> ^velocity <velo>)}    (pose ^name <locationName>)-->    (call <na> emo.ifs.ecar.ECar.speed ^transVel 200)    (call <na> emo.ifs.ecar.ECar.rotate ^transVel 30)    (modify <robo>  ^velocity 200)    (modify <elemvariable_init> ^val (compute 1+<value>)))(p wait2to3    {<elemvariable_init> (init ^val 2 ^val <value>)}    (robot ^name <na> ^location <locationName>)    {<pose> (pose ^name <locationName>)}-->    (call <na> emo.ifs.ecar.ECar.wait ^cycles 100)    ;wait will also stall rete execution.    (modify <elemvariable_init> ^val (compute 1+<value>))    (remove <pose>))(p detectfinished    {<elemvariable_init> (init ^val > 2)}-->    (make cleanup))(p cleanup1    (cleanup)    {<robo>(robot ^name <na>)}-->    (call <na> emo.ifs.ecar.ECar.disconnect)    (remove <robo>))(p cleanup2    (cleanup)    -(robot)-->    (write |Cleanup done. Exit program.| (CRLF))    (halt))(p printRobo    (robot ^name <na>        ^type Pioneer-AT        ^type <type>        ^velocity <velo>        ^location <locationName>        ^instantiated true)    (pose ^name <locationName>        ^x <x> ^y <y>)-->     (write |robot | <na>         | of type | <type>         | speed | <velo>         | and location (| <x>         |, | <y>         |)| (CRLF)    ) )(p instantiateAndConnectRobo    {<robo>(robot ^name <na> ^instantiated NIL)}--> (call <na> emo.ifs.ecar.ECar.new ^eCarName <na> ^world JWorld        => modify <robo> ^instantiated true)    (call <na> emo.ifs.ecar.ECar.connect))(p storeRoboLocationAndSpeed    (robot ^name <na> ^instantiated true ^location <location>)    -(pose ^name <location>)--> (call <na> emo.ifs.ecar.ECar.getPosition         => make pose ^name <location> ^x <?>))